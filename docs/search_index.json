[
["visualisation-ii.html", "Chapter 3 Visualisation II 3.1 Introduction 3.2 Graphe interactif 3.3 Plotly 3.4 Recherche reproductible", " Chapter 3 Visualisation II Le cours précendent nous avons travaillé à l’aide de la librairie ggplot. Elle permet d’explorer vos données à l’aide d’illustration et de faire des statistiques à l’intérieur du graphique avec la fonctionnalité stats du paquet ggplot. Aujourd’hui nous allons toujours explorer vos données mais à l’aide de visualisation interactive. Exemple : library(plotly) # Let&#39;s use the diamonds data set : df &lt;- diamonds[sample(nrow(diamonds), 1000), ] # First we do a ggplot with several graphs p &lt;- ggplot(data = df, aes(x = carat, y = price)) + geom_point(aes(text = paste(&quot;Clarity:&quot;, clarity,fill=price,size=depth))) + geom_smooth(aes(colour = cut),method=&quot;lm&quot;) + facet_wrap(~ cut) # Then we make them interactive with ggplotly p=ggplotly(p) p 3.1 Introduction De plus en plus d’acteurs dans le monde de l’entreprise utilisent l’infographie et la data visualisation pour : Communiquer de façon visuelle et simple des résultats complexes Appuyer un raisonnement Transformer des données bruts, abstraites en information (utiles et compréhensibles) Cette tendance est très anciennes : Codex Atlanticus Léonard de Vinci Les quelques principes généralistes sur l’infographie à garder en mémoires lors de la création d’un graphiques sont listés ci-dessous : mémoire courte quelques secondes d’attention ou de réflexion un max de ≃11 4 ou 5 classes de couleurs, tailles et de styles sont facilements distinguables http://jfly.iam.u-tokyo.ac.jp/color/ notion de perspective données et vérités (source “How to Lie With Statistics”, 1954, Huff) 3.2 Graphe interactif 3.2.1 Leaflet 3.2.1.1 Intro Leaflet est une bibliothéque open source codée en JavaScript,CSS et HTML5, qui permet de construire des cartes et des applications interactive de géolocalisation de vos données. Une librarie en R vous autorise de l’utiliser au sein de vos scripts d’exploration de vos données https://rstudio.github.io/leaflet. Grâce à cette librairie vous entrez dans le monde des *SIG “Système d’information géographique”. Il a été devellopépar Vladimir Agafonkin, qui a rejoint MapBox. Définition SIG Un système d’information géographique (SIG) est un système d’information conçu pour recueillir, stocker, traiter, analyser, gérer et présenter tous les types de données spatiales et géographiques. Exemple SIG GoogleMap CityMapper https://www.geoportail.gouv.fr/ 3.2.1.2 Utilisation Il faut installer leaflet. install.packages(&quot;leaflet&quot;) # to install the development version from Github, run # devtools::install_github(&quot;rstudio/leaflet&quot;) Une fois que nous avons installé leaflet. Nous allons créer une data.frame des liens de l’Essca à travers le monde. library(leaflet) library(ggmap) essca=geocode(location = c(&quot;Angers&quot;,&quot;Aix en Provence&quot;,&quot;cholet&quot;,&quot;Nantes&quot;,&quot;Nantes&quot;,&quot;Budapest&quot;,&quot;Paris&quot;,&quot;Toulouse&quot;,&quot;Lyon&quot;,&quot;Bordeaux&quot;,&quot;Shanghai&quot;)) essca$ville= c(&quot;Angers&quot;,&quot;Aix en Provence&quot;,&quot;cholet&quot;,&quot;Nantes&quot;,&quot;Nantes&quot;,&quot;Budapest&quot;,&quot;Paris&quot;,&quot;Toulouse&quot;,&quot;Lyon&quot;,&quot;Bordeaux&quot;,&quot;Shanghai&quot;) head(essca) ## lon lat ville ## 1 -0.563166 47.47842 Angers ## 2 5.447427 43.52974 Aix en Provence ## 3 -0.879787 47.05941 cholet ## 4 -1.553621 47.21837 Nantes ## 5 -1.553621 47.21837 Nantes ## 6 19.040235 47.49791 Budapest m &lt;- leaflet() %&gt;% addTiles() %&gt;% addMarkers(lng = essca$lon ,lat = essca$lat,popup = essca$ville) m Comme pour ggplot nous pouvons ajouter des couches supplémentaires à l’aide d’un pipe %&gt;%, qui est un opérateur du paquet magrittr. https://github.com/tidyverse/magrittr L’équivalent sans pipe du code précédent est : m &lt;- leaflet() m &lt;- addTiles(m) m &lt;- addMarkers(m,lng = essca$lon ,lat = essca$lat,popup = essca$ville) m Ajoutons un “mètre” à cette carte ! m &lt;- leaflet() %&gt;% addTiles() %&gt;% addMarkers(lng = essca$lon ,lat = essca$lat,popup = essca$ville) %&gt;% addScaleBar() m Exercice 1 Quelle est l’école de l’Essca la plus éloignée par rapport à celle d’Angers en Europe ? Quelle est la distance de cette ville par rapport à Angers ? Même question avec l’utilisation de la fonction ggmap::mapdist() à l’aide de la data.frame essca ? Indice (utiliser ?mapdist() ?which.max) 3.2.1.3 Carte choroplèthe library(rgdal) ## Loading required package: sp ## rgdal: version: 1.2-5, (SVN revision 648) ## Geospatial Data Abstraction Library extensions to R successfully loaded ## Loaded GDAL runtime: GDAL 1.11.3, released 2015/09/16 ## Path to GDAL shared files: /usr/share/gdal/1.11 ## Loaded PROJ.4 runtime: Rel. 4.9.2, 08 September 2015, [PJ_VERSION: 492] ## Path to PROJ.4 shared files: (autodetected) ## Linking to sp version: 1.2-4 # Download .shp file on the web: # download.file(&quot;http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip&quot; , destfile=&quot;world_shape_file.zip&quot;) # system(&quot;unzip world_shape_file.zip&quot;) # Read the file with rgdal library(rgdal) world_spdf=readOGR( dsn= getwd() , layer=&quot;TM_WORLD_BORDERS_SIMPL-0.3&quot;) ## OGR data source with driver: ESRI Shapefile ## Source: &quot;/home/mrrobot/Documents/FIN406_2017&quot;, layer: &quot;TM_WORLD_BORDERS_SIMPL-0.3&quot; ## with 246 features ## It has 11 fields # Color by quantile m=leaflet(world_spdf)%&gt;% addTiles() %&gt;% setView( lat=10, lng=0 , zoom=2) %&gt;% addPolygons(stroke = F, fillOpacity = 0.5, smoothFactor = 0.5, popup = format(world_spdf$POP2005,big.mark = &quot;,&quot;),color = ~colorNumeric(&quot;YlOrRd&quot;, domain=sqrt(POP2005),n = 9)(sqrt(POP2005)) ) %&gt;% addLegend(pal = colorNumeric(&quot;YlOrRd&quot;, domain=world_spdf$POP2005,n = 9),values = ~POP2005) m 3.2.2 Higcharter &amp; Dygraph Je vous conseille la lecture du site https://www.htmlwidgets.org/. Dans ce site, en plus du précédent paquet sur la création de carte interactive deux librairies permettent de générer des graphiques de qualités : Dygraph (pour les times series) Higcharter (pour tout type de graphe, mais plus compliqué à manipuler) library(&quot;highcharter&quot;) ## Highcharts (www.highcharts.com) is a Highsoft software product which is ## not free for commercial and Governmental use library(&quot;forecast&quot;) # appels des paquets airforecast &lt;- forecast(auto.arima(AirPassengers), level = 90) # hchart(airforecast) %&gt;% hc_title(text = &quot;Utilsation de graphe interactif&quot;) 3.2.2.1 Carte choroplèthe avec higcharter Une partie data mining est nécessaire pour extraire les données géophysiques de la carte. On télécharge directement les données sous forme json. Un paquet R jsonlite prend la relève pour pouvoir les lire. # getContent &lt;- function(url) { # library(httr) # content(GET(url)) # } # # world &lt;- getContent(&quot;https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json&quot;) # # is text # world &lt;- jsonlite::fromJSON(world, simplifyVector = FALSE) # # # http://cedeusdata.geosteiniger.cl/layers/geonode:mundo_corrientes_maritimas # marine &lt;- getContent(&quot;http://cedeusdata.geosteiniger.cl/geoserver/wfs?srsName=EPSG%3A4326&amp;typename=geonode%3Amundo_corrientes_maritimas&amp;outputFormat=json&amp;version=1.0.0&amp;service=WFS&amp;request=GetFeature&quot;) # # marine &lt;- geojsonio::as.json(marine) # # # # http://cedeusdata.geosteiniger.cl/layers/geonode:mundo_limites_placas # plates &lt;- getContent(&quot;http://cedeusdata.geosteiniger.cl/geoserver/wfs?srsName=EPSG%3A4326&amp;typename=geonode%3Amundo_limites_placas&amp;outputFormat=json&amp;version=1.0.0&amp;service=WFS&amp;request=GetFeature&quot;) # # plates &lt;- geojsonio::as.json(plates) # # # http://cedeusdata.geosteiniger.cl/layers/geonode:mundo_volcanes # volcano &lt;- getContent(&quot;http://cedeusdata.geosteiniger.cl/geoserver/wfs?srsName=EPSG%3A4326&amp;typename=geonode%3Amundo_volcanes&amp;outputFormat=json&amp;version=1.0.0&amp;service=WFS&amp;request=GetFeature&quot;) # # volcano &lt;- geojsonio::as.json(volcano) # #save(list = c(&quot;world&quot;,&quot;marine&quot;,&quot;plates&quot;,&quot;volcano&quot;),file = &quot;plot_highmap.Rdata&quot;) load(&quot;plot_highmap.Rdata&quot;) highchart(type = &quot;map&quot;) %&gt;% hc_chart(backgroundColor = &quot;#FFFFFF&quot;) %&gt;% hc_add_series(mapData = world, showInLegend = FALSE, nullColor = &quot;#424242&quot;, borderWidth = 0) %&gt;% hc_add_series(data = marine, type = &quot;mapline&quot;, geojson = TRUE, color = &quot;#2980b9&quot;, name = &quot;Marine currents&quot;, tooltip = list(pointFormat = &quot;{point.properties.NOMBRE}&quot;)) %&gt;% hc_add_series(data = plates, type = &quot;mapline&quot;, lineWidth = 2, zIndex = -1, geojson = TRUE, color = &quot;#d35400&quot;, name = &quot;Plates&quot;, tooltip = list(pointFormat = &quot;{point.properties.TIPO}&quot;)) %&gt;% hc_add_series(data = volcano, type = &quot;mappoint&quot;, color = hex_to_rgba(&quot;#f1c40f&quot;, 0.4), geojson = TRUE, name = &quot;Volcanos&quot;, tooltip = list(pointFormat = &quot;{point.properties.NOMBRE}&quot;), marker = list(lineWidth = 0, radius = 2)) Exercice 2 Tester l’intervalle de confiance de prévision du modèle arima à 95 % et 99 %, et quel est l’effet sur le graphe ? Changer la couleur des océans, des continents et des courants marins ? Aide (utiliser l’add in du package colourpicker ) Quelles sont les plus grandes différences avec la carte précedente qui utilisait leaflet ? library(dygraphs) dygraph(nhtemp, main = &quot;New Haven Temperatures&quot;, ylab = &quot;Temp (F)&quot;) *Exercie 3 Quelle est la classe de l’objet nhtemp ? A votre tour vous allez créer un objet xts à l’aide du code ci-dessous et faire un graphique time series en Dygraphs. library(xts) xts(rnorm(10,sd = 8,mean=10), Sys.Date()+1:10) Recréer ce graphique à l’aide de ggplot. library(ggplot2) ggplot(data=data.frame(val = rnorm(10,sd = 8,mean=10), date = Sys.Date()+1:10),aes(x=date,y=val))+ geom_line() +geom_point() 3.3 Plotly 3.3.1 Graphes interactif La grande force du paquet plotly est de pouvoir transformer vos graphiques que vous avez crée au cours du précedent TD en ggplot, qui sont statique. library(ggplot2) g_plot = (data=data.frame(val = rnorm(10,sd = 8,mean=10), date = Sys.Date()+1:10),aes(x=date,y=val))+ geom_line() +geom_point() ggplotly(g_plot) 3.3.2 Graphes en 3D 3.4 Recherche reproductible 3.4.1 Rmarkdown 3.4.2 Shiny "]
]
