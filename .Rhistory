geom_point(mapping = aes(x = displ, y = hwy, shape = class,fill=class)) +scale_shape_manual(values=seq(1,7))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +   facet_grid(~ class, nrow = 2)()
library(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +   facet_grid(~ class, nrow = 2)()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +   facet_grid(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +   facet_grid(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +   facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(year ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid( ~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(class ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(year ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(cars) + geom_point(aes(dist,speed))
ggplot(cars) + geom_smooth(aes(dist,speed))
ggplot(cars) + geom_point(aes(speed,dist))
ggplot(cars) + geom_smooth(aes(speed,dist))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))+
geom_spoint(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))+
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv),show.legend=F) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point(show.legend=F) +
geom_smooth(se = FALSE,show.legend=F)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +geom_smooth() +geom_point()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))  +geom_smooth(aes(group=drv)) +geom_point()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy,color=drv))  +geom_smooth() +geom_point()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))  +geom_smooth(se=F,aes(linetype=drv)) +geom_point(aes(color=drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))  +geom_smooth(se=F,aes(linetype=drv)) +geom_point(aes(color=drv))+ geom_point(size = 2, color="white")
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))  +geom_smooth(se=F,aes(linetype=drv))+geom_point(size = 2, color="white") +geom_point(aes(color=drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))  +geom_smooth(se=F,aes(linetype=drv))+geom_point(size = 2, color="white") +geom_point(aes(color=drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))  +geom_smooth(se=F,aes(linetype=drv))+geom_point(size = 5, color="white") +geom_point(aes(color=drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy),color="class")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy),colour="class")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy,colour="class"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class,fill=class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class,fill=class)) +scale_shape_manual(values=seq(1,7))
install.packages("ggThemeAssist")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
?stat_bin
demo <- data.frame(
a=seq(10,50,by=10),b= paste("bar",seq(1,5)))
ggplot(data = demo) +
geom_bar(mapping = aes(x = a, y = b), stat = "identity")
demo <- data.frame(
a=seq(10,50,by=10),b= paste("bar",seq(1,5)))
ggplot(data = demo) +
geom_bar(mapping = aes(x = b, y = a), stat = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..,group="1"))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..,color=clr))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..,color=clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,color=clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill=clarity))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter") +
ggtitle('Position = "jitter"')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
ggtitle('Position = "jitter"')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter") +
ggtitle('Position = "jitter"')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
ggtitle('Position = "No jitter"')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter") +
ggtitle('Position = "jitter"')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
ggtitle('Position = "No jitter"')
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy,group=cut))
ggplot(data = mpg, mapping = aes(x = cty, y = hwy,fill=cut))
ggplot(data = mpg, mapping = aes(x = cty, y = hwy,fill=cyl))
geom_boxplot()
mpg
ggplot(data = mpg, mapping = aes(x = cty, y = hwy,fill=cyl))
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = cyl, y = hwy))
ggplot(data = mpg, mapping = aes(x = cyl, y = hwy))
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = cyl))
ggplot(data = mpg, mapping = aes(x = cyl, y = hwy))
geom_boxplot()
mpg
ggplot(data = mpg, mapping = aes(x = model, y = hwy))
geom_boxplot()
mpg
ggplot(data = mpg, mapping = aes(x = model, y = displ))
geom_boxplot()
ggplot(data = mpg, mapping = aes( y = displ,group=model))
geom_boxplot()
ggplot(data = mpg, mapping = aes( y = displ,group=hwy))
geom_boxplot()
ggplot(data = mpg, mapping = aes( x= displ,group=hwy))
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,group=depth))
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,group=depth))
geom_boxplot(stat = "identity")
ggplot(data = diamonds, mapping = aes( x= cut,y=depth))
geom_boxplot(stat = "identity")
ggplot(data = diamonds, mapping = aes( x= cut,y=depth))
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_jitter()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_jitter()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_violin()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_jitter()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_violin()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_jitter()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_violin()
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_violin()+geom_jitter(alpha=0.2)
ggplot(data = diamonds, mapping = aes( x= cut,y=depth)) +
geom_violin()+geom_jitter(alpha=0.1)
ggplot(data = diamonds, mapping = aes( x= cut,y=depth))+
geom_jitter()+ geom_violin(alpha=0.1)
ggplot(data = diamonds, mapping = aes( x= cut,y=depth))+
geom_jitter()+ geom_violin(alpha=0.5)
ggplot(data = diamonds, mapping = aes( x= cut,y=depth))+
geom_jitter()+ geom_violin(alpha=0.7)
ggplot(data = diamonds, mapping = aes( x= cut,y=depth))+
geom_jitter(alpha=0.5)+ geom_violin(alpha=0.7)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge") +
ggtitle('Position = "fill"')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge") +
ggtitle('Position = "dodge"')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill") +
ggtitle('Position = "fill"')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity)) +
ggtitle('Position = "stack"')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill=clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))+coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,colour=cut))+coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill=cut))+coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill=cut),colour="black")+coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill=cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill=cut),colour="black")
install.packages("sp")
install.packages("rgeos")
# Packages ----------------------------------------------------------------
library("dplyr")
library("ggplot2")
library("sp")
library("rgeos")
install.packages("rgeos")
devtools::install_url("https://cran.r-project.org/src/contrib/rgeos_0.3-22.tar.gz")
devtools::install_url("https://cran.r-project.org/src/contrib/rgeos_0.3-22.tar.gz")
# Packages ----------------------------------------------------------------
library("dplyr")
library("ggplot2")
library("sp")
library("rgeos")
install.packages("rgeos")
# Packages ----------------------------------------------------------------
library("dplyr")
library("ggplot2")
library("sp")
library("rgeos")
# Funs --------------------------------------------------------------------
coord_circle <- function(centre = c(0, 0), r = 1, n = 1000) {
data_frame(
x = seq(from = 0 - r, to = 0 + r, length.out = n %/% 2),
y = sqrt(r^2 - x^2)
) %>% bind_rows(., -.) %>%
mutate(x = x + centre[1], y = y + centre[2])
}
create_poly <- function(...) {
args <- list(...)
SpatialPolygons(
lapply(
X = seq_along(args),
FUN = function(x) {
Polygons(list(Polygon(as.data.frame(args[[x]]))), names(args)[x])
}
)
)
}
echancrure <- function(to_var, by_var, p = 0.1) {
ind <- which(by_var >= -0.08 & by_var <= 0.08 & to_var > 0)
to_var[ind] <- to_var[ind] - p
ind <- which(by_var >= -0.08 & by_var <= 0.08 & to_var < 0)
to_var[ind] <- to_var[ind] + p
return(to_var)
}
# BB-8 geometries ---------------------------------------------------------
# droid_body -------------------------------------------------------------------
# shape of the droid_body : two circles and a vertical line
droid_body <- coord_circle(centre = c(0, 0), r = 1)
droid_body$xvert <- 0
droid_body$yvert <- droid_body$x
droid_body <- bind_cols(
droid_body,
coord_circle(centre = c(0, 0), r = 0.35, n = nrow(droid_body)) %>% select(xint = x, yint = y)
)
# grey shapes in the central inner circle
droid_body_rect <- data_frame(
x = c(-0.5, 0.5, 0.5, -0.5, c(-0.5, 0.5, 0.5, -0.5) - 0.2, c(-0.5, 0.5, 0.5, -0.5) + 0.2),
y = c(-0.6, 0.4, 0.6, -0.4, c(-0.6, 0.4, 0.6, -0.4) + 0.2, c(-0.6, 0.4, 0.6, -0.4) - 0.2),
group = rep(1:3, each = 4)
)
# a polygon for calculate the intersection between the grey shapes and the inner circle
polyrect <- create_poly(
"polyrect1" = droid_body_rect[droid_body_rect$group == 1, 1:2],
"polyrect2" = droid_body_rect[droid_body_rect$group == 2, 1:2],
"polyrect3" = droid_body_rect[droid_body_rect$group == 3, 1:2]
)
polycircle <- create_poly(
"polycircle" = droid_body[, c("xint", "yint")]
)
# plot(polyrect); plot(polycircle, add = TRUE)
polyrect <- gIntersection(spgeom1 = polyrect, spgeom2 = polycircle)
# plot(polyrect); plot(polycircle, add = TRUE)
# fortify the polygon for ggplot
droid_body_rect <- fortify(polyrect)
# Central ring (orange)
ring <- coord_circle(centre = c(0, 0), r = 0.4)
ring$y <- echancrure(to_var = ring$y, by_var = ring$x, p = 0.1)
ring$x <- echancrure(to_var = ring$x, by_var = ring$y, p = 0.1)
ring <- bind_rows(
ring %>% mutate(group = (x >= 0) * 1),
coord_circle(centre = c(0, 0), r = 0.55, n = nrow(ring)) %>% mutate(y = -y, group = (x >= 0) * 1)
) %>%
filter(group == 1) # oups something went wrong
ring <- bind_rows(ring, ring %>% mutate(x = -x, group = 2))
# ring left and right
# we make a copy of the right part of the central ring
ring_left <- ring %>% filter(group == 1)
# and we shift the ring center
ring_left$x <- ring_left$x - 1.3
# the same ...
ring_right <- ring %>% filter(group == 2)
ring_right$x <- ring_right$x + 1.3
# we creta a polygon for the intersection with the droid_body circle
polyring <- create_poly(
"polyring_g" = ring_left[, c("x", "y")],
"polyring_d" = ring_right[, c("x", "y")]
)
polydroid_body <- create_poly("polydroid_body" = droid_body[, c("x", "y")])
# plot(polyring); plot(polydroid_body, add = TRUE)
polyring <- gIntersection(spgeom1 = polyring, spgeom2 = polydroid_body)
fort_ring <- fortify(polyring)
# the horizontal line of the body (in two parts)
ligne_hori <- data_frame(
x = c(-1, range(ring$x), 1),
y = 0,
group = c(1, 1, 2, 2)
)
# droid head --------------------------------------------------------------------
droid_head <- coord_circle(centre = c(0, 1.02), r = 0.52) %>%
filter(y >= 1.02) %>%
mutate(group = 1, fill = "white", col= "black") %>%
bind_rows(
data_frame(
x = c(-0.52, -0.4, 0.4, 0.52),
y = c(1.02, 0.95, 0.95, 1.02),
group = 2, fill = "white", col= "black"
)
)
# Grey bars in droid's head
poly_head_grey <- create_poly(
"poly_head_grey_haut" = data_frame(
x = c(-0.52, 0.52, 0.52, -0.52),
y = c(1.44, 1.44, 1.51, 1.51)
),
"poly_head_grey_bas" = data_frame(
x = c(-0.52, 0.52, 0.52, -0.52),
y = c(1.02, 1.02, 1.07, 1.07)
)
)
polydroid_head <- create_poly("polydroid_head" = droid_head[droid_head$group == 1, c("x", "y")])
poly_head_grey <- gIntersection(spgeom1 = poly_head_grey, spgeom2 = polydroid_head)
fort_droid_headrectgris <- fortify(poly_head_grey)
# orange bars
poly_head_orange <- create_poly(
"poly_head_orange1" = data_frame(
x = c(-0.52, 0.52, 0.52, -0.52),
y = c(1.38, 1.38, 1.42, 1.42)
),
"poly_head_orange2" = data_frame(
x = c(-0.35, -0.35, -0.2, -0.2),
y = c(1.07, 1.15, 1.15, 1.07)
),
"poly_head_orange3" = data_frame(
x = c(-0.55, -0.55, -0.45, -0.45),
y = c(1.07, 1.15, 1.15, 1.07)
),
"poly_head_orange4" = data_frame(
x = c(0.44, 0.44, 0.47, 0.47),
y = c(1.07, 1.15, 1.15, 1.07)
)
)
poly_head_orange <- gIntersection(spgeom1 = poly_head_orange, spgeom2 = polydroid_head)
fort_droid_headrectorange <- fortify(poly_head_orange)
polygones_droid_head <- bind_rows(
fort_droid_headrectgris %>% select(-piece) %>%
mutate(group = as.numeric(as.character(group)), fill = "#8E8E9C", col= "black"),
fort_droid_headrectorange %>% select(-piece) %>%
mutate(group = as.numeric(as.character(group)) * 2, fill = "#DF8D5D", col= "black")
)
# Eyes
droid_eyes <- bind_rows(
coord_circle(centre = c(0, 1.35), r = 0.14) %>% mutate(group = 1, fill = "white", col = "white"),
coord_circle(centre = c(0, 1.35), r = 0.12) %>% mutate(group = 2, fill = "white", col = "black"),
coord_circle(centre = c(0, 1.35), r = 0.10) %>% mutate(group = 3, fill = "grey40", col = "grey40"),
coord_circle(centre = c(0, 1.35), r = 0.08) %>% mutate(group = 4, fill = "black", col = "black"),
coord_circle(centre = c(0, 1.16), r = 0.04) %>% mutate(group = 5, fill = "#76B1DE", col = "black"),
coord_circle(centre = c(0.25, 1.20), r = 0.08) %>% mutate(group = 6, fill = "black", col = "black"),
coord_circle(centre = c(0.25, 1.20), r = 0.07) %>% mutate(group = 7, fill = "white", col = "black"),
coord_circle(centre = c(0.25, 1.20), r = 0.06) %>% mutate(group = 8, fill = "grey40", col = "grey40"),
coord_circle(centre = c(0.25, 1.20), r = 0.04) %>% mutate(group = 9, fill = "black", col = "black")
)
eye_line <- data_frame(
x = 0,
y = c(1.07, 1.16-0.04)
)
# Antennas
antennas <- data_frame(
x = c(0.01, 0.01, 0.10, 0.10),
y = c(sqrt(0.52^2 - 0.01^2) + 1.02, sqrt(0.52^2 - 0.01^2) + 1.02 + 0.15,
sqrt(0.52^2 - 0.1^2) + 1.02, sqrt(0.52^2 - 0.1^2) + 1.02 + 0.25),
group = c(1, 1, 2, 2)
)
# bb-8/ggplot2 ------------------------------------------------------------
bb8 <- ggplot(data = droid_body) +
coord_fixed() +
geom_polygon(mapping = aes(x = x, y = y), fill = "white", col = "black") +
geom_polygon(data = droid_body_rect, mapping = aes(x = long, y = lat, group = group), fill = "#8E8E9C") +
geom_path(mapping = aes(x = xvert, y = yvert)) +
geom_path(mapping = aes(x = xint, y = yint)) +
geom_polygon(data = ring, mapping = aes(x = x, y = y, group = group), fill = "#DF8D5D", col = "#DF8D5D") +
geom_path(data = ligne_hori, mapping = aes(x = x, y = y, group = group)) +
geom_polygon(data = fort_ring , mapping = aes(x = long, y = lat, group = group), fill = "#DF8D5D") +
geom_polygon(data = droid_head, mapping = aes(x = x, y = y, group = group, fill = fill, col = col)) +
geom_polygon(data = polygones_droid_head, mapping = aes(x = long, y = lat, group = group, fill = fill, col = col)) +
geom_polygon(data = droid_eyes, mapping = aes(x = x, y = y, group = group, fill = fill, col = col)) +
scale_fill_identity() + scale_color_identity() +
geom_line(data = eye_line, mapping = aes(x = x, y = y)) +
geom_line(data = antennas, mapping = aes(x = x, y = y, group = group), col = "black")
bb8
# or
bb8 + theme_void() +labs(subtitle="http://www.r-graph-gallery.com/144-droid-bb-8-data-art/")
# save --------------------------------------------------------------------
# ggsave(filename = "#144_bb8_ggplot2.png", plot = bb8, width = 6, height = 8)
# ggsave(filename = "#144_bb8_ggplot2_void.png", plot = bb8 + theme_void(), width = 6, height = 8)
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
bookdown:::serve_book()
nz <- map_data("France")
??map_data
nz <- map_data("France")
installed.packages("maps")
install.packages("maps")
fr <- map_data("France")
fr <- map_data(region = "france")
fr <- map_data(region = "france")
fr <- map_data( "france")
#install.packages("maps")
fr <- map_data( "france")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
fr <- map_data( "bretagne")
fr <- map_data( region="bretagne")
fr <- map_data( region="morbihan")
fr <- map_data("france", region="morbihan")
fr <- map_data("france", region="bretagne")
fr <- map_data("france", region=c("morbihan","ile et vaine")
fr <- map_data("france", region=c("morbihan","ile et vilaine"))
fr <- map_data("france", region=c("morbihan","ile et vilaine"))
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
#install.packages("maps")
fr <- map_data("france", region=c("morbihan","ille et vilaine","finistère","côte d'armor"))
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
#install.packages("maps")
fr <- map_data("france")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
#install.packages("maps")
fr <- map_data("france")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
ggplot(fr, aes(long, lat, group = group)) +
geom_polygon(fill = "white", colour = "black") +
coord_quickmap()
